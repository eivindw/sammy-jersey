<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <name>sammy-jersey</name>
   <groupId>eivindw</groupId>
   <artifactId>sammy-jersey</artifactId>
   <version>1.0-SNAPSHOT</version>
   <packaging>war</packaging>
   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <!-- Web framework versions -->
      <jettyVersion>7.5.3.v20111011</jettyVersion>
      <jstlVersion>1.2</jstlVersion>
      <jerseyVersion>1.9.1</jerseyVersion>
      <guavaVersion>10.0.1</guavaVersion>
      <slf4jVersion>1.6.4</slf4jVersion>
      <!-- Test versions -->
      <junitVersion>4.10</junitVersion>
      <mockitoVersion>1.9.0-rc1</mockitoVersion>
      <!-- Maven plugin versions -->
      <execPluginVersion>1.2.1</execPluginVersion>
      <jasminePluginVersion>1.0.2-beta-5</jasminePluginVersion>
      <wro4jVersion>1.4.6</wro4jVersion>
   </properties>

   <build>
      <plugins>
         <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>${jettyVersion}</version>
            <configuration>
               <reload>manual</reload>
            </configuration>
            <dependencies>
               <dependency>
                  <groupId>javax.servlet</groupId>
                  <artifactId>jstl</artifactId>
                  <version>${jstlVersion}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>com.github.searls</groupId>
            <artifactId>jasmine-maven-plugin</artifactId>
            <version>${jasminePluginVersion}</version>
            <executions>
               <execution>
                  <goals>
                     <goal>test</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <sourceIncludes>
                  <include>lib/*.js</include>
                  <include>app/namespace.js</include>
                  <include>app/*.js</include>
               </sourceIncludes>
               <jsSrcDir>src/main/webapp/js</jsSrcDir>
               <specIncludes>
                  <include>lib/sinon*.js</include>
                  <include>lib/jasmine*.js</include>
                  <include>lib/*.js</include>
                  <include>spec/*.js</include>
               </specIncludes>
            </configuration>
         </plugin>
         <plugin>
            <groupId>ro.isdc.wro4j</groupId>
            <artifactId>wro4j-maven-plugin</artifactId>
            <version>${wro4jVersion}</version>
            <executions>
               <execution>
                  <phase>test</phase>
                  <goals>
                     <goal>jshint</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <targetGroups>app</targetGroups>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>jscoverage</id>
         <activation>
            <property>
               <name>jscoverage</name>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>exec-maven-plugin</artifactId>
                  <version>${execPluginVersion}</version>
                  <executions>
                     <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                           <goal>exec</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <executable>jscoverage</executable>
                     <arguments>
                        <argument>--no-instrument=lib</argument>
                        <argument>--no-instrument=template</argument>
                        <argument>src/main/webapp/js</argument>
                        <argument>src/test/jsinstrumented</argument>
                     </arguments>
                  </configuration>
               </plugin>
               <plugin>
                  <groupId>com.github.searls</groupId>
                  <artifactId>jasmine-maven-plugin</artifactId>
                  <configuration>
                     <jsSrcDir>src/test/jsinstrumented</jsSrcDir>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>

   <dependencies>
      <!-- Test -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit-dep</artifactId>
         <version>${junitVersion}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.sun.jersey</groupId>
         <artifactId>jersey-client</artifactId>
         <version>${jerseyVersion}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <version>${mockitoVersion}</version>
         <scope>test</scope>
      </dependency>
      <!-- Jetty -->
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-servlet</artifactId>
         <version>${jettyVersion}</version>
      </dependency>
      <!-- Webapp -->
      <dependency>
         <groupId>com.sun.jersey</groupId>
         <artifactId>jersey-server</artifactId>
         <version>${jerseyVersion}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>com.sun.jersey</groupId>
         <artifactId>jersey-json</artifactId>
         <version>${jerseyVersion}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>ro.isdc.wro4j</groupId>
         <artifactId>wro4j-core</artifactId>
         <version>${wro4jVersion}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>ro.isdc.wro4j</groupId>
         <artifactId>wro4j-extensions</artifactId>
         <version>${wro4jVersion}</version>
         <scope>compile</scope>
      </dependency>
      <!-- General -->
      <dependency>
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
         <version>${guavaVersion}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>${slf4jVersion}</version>
         <scope>runtime</scope>
      </dependency>
   </dependencies>
</project>
